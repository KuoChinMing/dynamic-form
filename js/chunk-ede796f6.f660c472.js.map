{"version":3,"sources":["webpack:///./src/components/panel/TChipGroupSettingPanel.vue?313e","webpack:///src/components/panel/TChipGroupSettingPanel.vue","webpack:///./src/components/panel/TChipGroupSettingPanel.vue?825f","webpack:///./src/components/panel/TChipGroupSettingPanel.vue","webpack:///../../../src/components/VAutocomplete/VAutocomplete.ts"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","element","key","id","bindingData","staticClass","_v","class","white","model","value","callback","$$v","$set","expression","text","staticRenderFns","name","components","ElementSettingInputBox","BindingKeyInputBox","props","type","Object","default","watch","component","VAutocomplete","VCol","VContainer","VRow","defaultMenuProps","offsetY","offsetOverflow","transition","allowOverflow","autoSelectFirst","filter","itemText","queryText","hideNoData","menuProps","noFilter","searchInput","String","data","lazySearch","computed","classes","selectedIndex","computedItems","selectedValues","selectedItems","map","item","hasDisplayedItems","hideSelected","filteredItems","some","length","currentRange","selectedItem","getText","internalSearch","allItems","get","set","isAnyValueAllowed","isDirty","searchIsDirty","isSearching","multiple","menuCanShow","$_menuProps","find","i","listData","items","internalValue","isFocused","document","$refs","input","isMenuActive","val","oldVal","activateMenu","created","destroyed","methods","onFilteredItemsChanged","onInternalSearchChanged","updateMenuDimensions","menu","changeSelectedIndex","keyCode","deleteCurrentItem","curIndex","curItem","getDisabled","lastIndex","nextIndex","nextItem","clearableCallback","genInput","autocomplete","domProps","genInputSlot","slot","genSelections","hasSlot","onClick","isAppendInner","e","onInput","target","onKeyDown","onSpaceDown","onTabDown","onUpDown","selectItem","setSelectedItems","setSearch","updateSelf","valueComparator","getValue","hasItem","indexOf","onCopy","currentItem","currentItemText","event"],"mappings":"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","file":"js/chunk-ede796f6.f660c472.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('element-setting-input-box',{attrs:{\"value\":_vm.element['type'],\"type\":\"textField\",\"label\":\"type\",\"hide-details\":\"\",\"dense\":\"\",\"outlined\":\"\",\"disabled\":\"\"}}),_c('element-setting-input-box',{attrs:{\"value\":_vm.element['id'],\"type\":\"textField\",\"label\":\"id\",\"disabled\":\"\",\"dense\":\"\",\"outlined\":\"\",\"hide-details\":\"\"}}),_c('binding-key-input-box',{key:_vm.element.id,attrs:{\"element\":_vm.element,\"binding-data\":_vm.bindingData}}),_c('v-row',{attrs:{\"align\":\"center\"}},[_c('v-col',{staticClass:\"text-right\",attrs:{\"cols\":\"3\"}},[_c('label',[_vm._v(\"defaultValue\")])]),_c('v-col',{attrs:{\"cols\":\"9\"}},[_c('v-autocomplete',{class:{ white: _vm.element['bindingKey'] },attrs:{\"disabled\":!_vm.element['bindingKey'],\"items\":_vm.element['contents'],\"multiple\":_vm.element['multiple'],\"item-text\":\"value\",\"item-value\":\"value\",\"hide-details\":\"\",\"dense\":\"\",\"outlined\":\"\"},model:{value:(_vm.bindingData[_vm.element['bindingKey']]),callback:function ($$v) {_vm.$set(_vm.bindingData, _vm.element['bindingKey'], $$v)},expression:\"bindingData[element['bindingKey']]\"}})],1)],1),_c('element-setting-input-box',{attrs:{\"input-class\":\"white\",\"label\":\"multiple\",\"type\":\"select\",\"items\":[\n      { text: 'true', value: true },\n      { text: 'false', value: false } ],\"hide-details\":\"\",\"dense\":\"\",\"outlined\":\"\"},model:{value:(_vm.element['multiple']),callback:function ($$v) {_vm.$set(_vm.element, 'multiple', $$v)},expression:\"element['multiple']\"}}),_c('element-setting-input-box',{attrs:{\"input-class\":\"white\",\"label\":\"color\",\"hide-details\":\"\",\"dense\":\"\",\"outlined\":\"\"},model:{value:(_vm.element['color']),callback:function ($$v) {_vm.$set(_vm.element, 'color', $$v)},expression:\"element['color']\"}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <v-container>\n    <element-setting-input-box\n      :value=\"element['type']\"\n      type=\"textField\"\n      label=\"type\"\n      hide-details\n      dense\n      outlined\n      disabled\n    ></element-setting-input-box>\n\n    <element-setting-input-box\n      :value=\"element['id']\"\n      type=\"textField\"\n      label=\"id\"\n      disabled\n      dense\n      outlined\n      hide-details\n    ></element-setting-input-box>\n\n    <binding-key-input-box\n      :key=\"element.id\"\n      :element=\"element\"\n      :binding-data=\"bindingData\"\n    ></binding-key-input-box>\n\n    <v-row align=\"center\">\n      <v-col cols=\"3\" class=\"text-right\">\n        <label>defaultValue</label>\n      </v-col>\n      <v-col cols=\"9\">\n        <v-autocomplete\n          v-model=\"bindingData[element['bindingKey']]\"\n          :disabled=\"!element['bindingKey']\"\n          :class=\"{ white: element['bindingKey'] }\"\n          :items=\"element['contents']\"\n          :multiple=\"element['multiple']\"\n          item-text=\"value\"\n          item-value=\"value\"\n          hide-details\n          dense\n          outlined\n        ></v-autocomplete>\n      </v-col>\n    </v-row>\n\n    <element-setting-input-box\n      v-model=\"element['multiple']\"\n      input-class=\"white\"\n      label=\"multiple\"\n      type=\"select\"\n      :items=\"[\n        { text: 'true', value: true },\n        { text: 'false', value: false },\n      ]\"\n      hide-details\n      dense\n      outlined\n    ></element-setting-input-box>\n\n    <element-setting-input-box\n      v-model=\"element['color']\"\n      input-class=\"white\"\n      label=\"color\"\n      hide-details\n      dense\n      outlined\n    ></element-setting-input-box>\n  </v-container>\n</template>\n\n<script>\nimport ElementSettingInputBox from \"@/components/panel/ElementSettingInputBox.vue\";\nimport BindingKeyInputBox from \"@/components/panel/BindingKeyInputBox.vue\";\n\nexport default {\n  name: \"TChipGroupSettingPanel\",\n\n  components: {\n    ElementSettingInputBox,\n    BindingKeyInputBox,\n  },\n\n  props: {\n    element: {\n      type: Object,\n      default: () => {},\n    },\n    bindingData: {\n      type: [Object, null],\n      default: null,\n    },\n  },\n\n  watch: {\n    \"element.multiple\"() {\n      this.bindingData[this.element[\"bindingKey\"]] = null;\n    },\n  },\n};\n</script>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TChipGroupSettingPanel.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TChipGroupSettingPanel.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./TChipGroupSettingPanel.vue?vue&type=template&id=616fc3c4&\"\nimport script from \"./TChipGroupSettingPanel.vue?vue&type=script&lang=js&\"\nexport * from \"./TChipGroupSettingPanel.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VAutocomplete } from 'vuetify/lib/components/VAutocomplete';\nimport { VCol } from 'vuetify/lib/components/VGrid';\nimport { VContainer } from 'vuetify/lib/components/VGrid';\nimport { VRow } from 'vuetify/lib/components/VGrid';\ninstallComponents(component, {VAutocomplete,VCol,VContainer,VRow})\n","// Styles\nimport './VAutocomplete.sass'\n\n// Extensions\nimport VSelect, { defaultMenuProps as VSelectMenuProps } from '../VSelect/VSelect'\nimport VTextField from '../VTextField/VTextField'\n\n// Utilities\nimport mergeData from '../../util/mergeData'\nimport {\n  getObjectValueByPath,\n  getPropertyFromItem,\n  keyCodes,\n} from '../../util/helpers'\n\n// Types\nimport { PropType, VNode } from 'vue'\nimport { PropValidator } from 'vue/types/options'\n\nconst defaultMenuProps = {\n  ...VSelectMenuProps,\n  offsetY: true,\n  offsetOverflow: true,\n  transition: false,\n}\n\n/* @vue/component */\nexport default VSelect.extend({\n  name: 'v-autocomplete',\n\n  props: {\n    allowOverflow: {\n      type: Boolean,\n      default: true,\n    },\n    autoSelectFirst: {\n      type: Boolean,\n      default: false,\n    },\n    filter: {\n      type: Function,\n      default: (item: any, queryText: string, itemText: string) => {\n        return itemText.toLocaleLowerCase().indexOf(queryText.toLocaleLowerCase()) > -1\n      },\n    } as PropValidator<(item: any, queryText: string, itemText: string) => boolean>,\n    hideNoData: Boolean,\n    menuProps: {\n      type: VSelect.options.props.menuProps.type,\n      default: () => defaultMenuProps,\n    },\n    noFilter: Boolean,\n    searchInput: {\n      type: String as PropType<string | null>,\n    },\n  },\n\n  data () {\n    return {\n      lazySearch: this.searchInput,\n    }\n  },\n\n  computed: {\n    classes (): object {\n      return {\n        ...VSelect.options.computed.classes.call(this),\n        'v-autocomplete': true,\n        'v-autocomplete--is-selecting-index': this.selectedIndex > -1,\n      }\n    },\n    computedItems (): object[] {\n      return this.filteredItems\n    },\n    selectedValues (): object[] {\n      return this.selectedItems.map(item => this.getValue(item))\n    },\n    hasDisplayedItems (): boolean {\n      return this.hideSelected\n        ? this.filteredItems.some(item => !this.hasItem(item))\n        : this.filteredItems.length > 0\n    },\n    currentRange (): number {\n      if (this.selectedItem == null) return 0\n\n      return String(this.getText(this.selectedItem)).length\n    },\n    filteredItems (): object[] {\n      if (!this.isSearching || this.noFilter || this.internalSearch == null) return this.allItems\n\n      return this.allItems.filter(item => {\n        const value = getPropertyFromItem(item, this.itemText)\n        const text = value != null ? String(value) : ''\n\n        return this.filter(item, String(this.internalSearch), text)\n      })\n    },\n    internalSearch: {\n      get (): string | null {\n        return this.lazySearch\n      },\n      set (val: any) { // TODO: this should be `string | null` but it breaks lots of other types\n        // emit update event only when the new\n        // search value is different from previous\n        if (this.lazySearch !== val) {\n          this.lazySearch = val\n          this.$emit('update:search-input', val)\n        }\n      },\n    },\n    isAnyValueAllowed (): boolean {\n      return false\n    },\n    isDirty (): boolean {\n      return this.searchIsDirty || this.selectedItems.length > 0\n    },\n    isSearching (): boolean {\n      return (\n        this.multiple &&\n        this.searchIsDirty\n      ) || (\n        this.searchIsDirty &&\n        this.internalSearch !== this.getText(this.selectedItem)\n      )\n    },\n    menuCanShow (): boolean {\n      if (!this.isFocused) return false\n\n      return this.hasDisplayedItems || !this.hideNoData\n    },\n    $_menuProps (): object {\n      const props = VSelect.options.computed.$_menuProps.call(this);\n      (props as any).contentClass = `v-autocomplete__content ${(props as any).contentClass || ''}`.trim()\n      return {\n        ...defaultMenuProps,\n        ...props,\n      }\n    },\n    searchIsDirty (): boolean {\n      return this.internalSearch != null &&\n        this.internalSearch !== ''\n    },\n    selectedItem (): any {\n      if (this.multiple) return null\n\n      return this.selectedItems.find(i => {\n        return this.valueComparator(this.getValue(i), this.getValue(this.internalValue))\n      })\n    },\n    listData () {\n      const data = VSelect.options.computed.listData.call(this) as any\n\n      data.props = {\n        ...data.props,\n        items: this.virtualizedItems,\n        noFilter: (\n          this.noFilter ||\n          !this.isSearching ||\n          !this.filteredItems.length\n        ),\n        searchInput: this.internalSearch,\n      }\n\n      return data\n    },\n  },\n\n  watch: {\n    filteredItems: 'onFilteredItemsChanged',\n    internalValue: 'setSearch',\n    isFocused (val) {\n      if (val) {\n        document.addEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.select()\n      } else {\n        document.removeEventListener('copy', this.onCopy)\n        this.$refs.input && this.$refs.input.blur()\n        this.updateSelf()\n      }\n    },\n    isMenuActive (val) {\n      if (val || !this.hasSlot) return\n\n      this.lazySearch = null\n    },\n    items (val, oldVal) {\n      // If we are focused, the menu\n      // is not active, hide no data is enabled,\n      // and items change\n      // User is probably async loading\n      // items, try to activate the menu\n      if (\n        !(oldVal && oldVal.length) &&\n        this.hideNoData &&\n        this.isFocused &&\n        !this.isMenuActive &&\n        val.length\n      ) this.activateMenu()\n    },\n    searchInput (val: string) {\n      this.lazySearch = val\n    },\n    internalSearch: 'onInternalSearchChanged',\n    itemText: 'updateSelf',\n  },\n\n  created () {\n    this.setSearch()\n  },\n\n  destroyed () {\n    document.removeEventListener('copy', this.onCopy)\n  },\n\n  methods: {\n    onFilteredItemsChanged (val: never[], oldVal: never[]) {\n      // TODO: How is the watcher triggered\n      // for duplicate items? no idea\n      if (val === oldVal) return\n\n      this.setMenuIndex(-1)\n\n      this.$nextTick(() => {\n        if (\n          !this.internalSearch ||\n          (val.length !== 1 &&\n            !this.autoSelectFirst)\n        ) return\n\n        this.$refs.menu.getTiles()\n        this.setMenuIndex(0)\n      })\n    },\n    onInternalSearchChanged () {\n      this.updateMenuDimensions()\n    },\n    updateMenuDimensions () {\n      // Type from menuable is not making it through\n      this.isMenuActive && this.$refs.menu && this.$refs.menu.updateDimensions()\n    },\n    changeSelectedIndex (keyCode: number) {\n      // Do not allow changing of selectedIndex\n      // when search is dirty\n      if (this.searchIsDirty) return\n\n      if (this.multiple && keyCode === keyCodes.left) {\n        if (this.selectedIndex === -1) {\n          this.selectedIndex = this.selectedItems.length - 1\n        } else {\n          this.selectedIndex--\n        }\n      } else if (this.multiple && keyCode === keyCodes.right) {\n        if (this.selectedIndex >= this.selectedItems.length - 1) {\n          this.selectedIndex = -1\n        } else {\n          this.selectedIndex++\n        }\n      } else if (keyCode === keyCodes.backspace || keyCode === keyCodes.delete) {\n        this.deleteCurrentItem()\n      }\n    },\n    deleteCurrentItem () {\n      const curIndex = this.selectedIndex\n      const curItem = this.selectedItems[curIndex]\n\n      // Do nothing if input or item is disabled\n      if (\n        !this.isInteractive ||\n        this.getDisabled(curItem)\n      ) return\n\n      const lastIndex = this.selectedItems.length - 1\n\n      // Select the last item if\n      // there is no selection\n      if (\n        this.selectedIndex === -1 &&\n        lastIndex !== 0\n      ) {\n        this.selectedIndex = lastIndex\n\n        return\n      }\n\n      const length = this.selectedItems.length\n      const nextIndex = curIndex !== length - 1\n        ? curIndex\n        : curIndex - 1\n      const nextItem = this.selectedItems[nextIndex]\n\n      if (!nextItem) {\n        this.setValue(this.multiple ? [] : null)\n      } else {\n        this.selectItem(curItem)\n      }\n\n      this.selectedIndex = nextIndex\n    },\n    clearableCallback () {\n      this.internalSearch = null\n\n      VSelect.options.methods.clearableCallback.call(this)\n    },\n    genInput () {\n      const input = VTextField.options.methods.genInput.call(this)\n\n      input.data = mergeData(input.data!, {\n        attrs: {\n          'aria-activedescendant': getObjectValueByPath(this.$refs.menu, 'activeTile.id'),\n          autocomplete: getObjectValueByPath(input.data!, 'attrs.autocomplete', 'off'),\n        },\n        domProps: { value: this.internalSearch },\n      })\n\n      return input\n    },\n    genInputSlot () {\n      const slot = VSelect.options.methods.genInputSlot.call(this)\n\n      slot.data!.attrs!.role = 'combobox'\n\n      return slot\n    },\n    genSelections (): VNode | never[] {\n      return this.hasSlot || this.multiple\n        ? VSelect.options.methods.genSelections.call(this)\n        : []\n    },\n    onClick (e: MouseEvent) {\n      if (!this.isInteractive) return\n\n      this.selectedIndex > -1\n        ? (this.selectedIndex = -1)\n        : this.onFocus()\n\n      if (!this.isAppendInner(e.target)) this.activateMenu()\n    },\n    onInput (e: Event) {\n      if (\n        this.selectedIndex > -1 ||\n        !e.target\n      ) return\n\n      const target = e.target as HTMLInputElement\n      const value = target.value\n\n      // If typing and menu is not currently active\n      if (target.value) this.activateMenu()\n\n      this.internalSearch = value\n      this.badInput = target.validity && target.validity.badInput\n    },\n    onKeyDown (e: KeyboardEvent) {\n      const keyCode = e.keyCode\n\n      if (\n        e.ctrlKey ||\n        ![keyCodes.home, keyCodes.end].includes(keyCode)\n      ) {\n        VSelect.options.methods.onKeyDown.call(this, e)\n      }\n\n      // The ordering is important here\n      // allows new value to be updated\n      // and then moves the index to the\n      // proper location\n      this.changeSelectedIndex(keyCode)\n    },\n    onSpaceDown (e: KeyboardEvent) { /* noop */ },\n    onTabDown (e: KeyboardEvent) {\n      VSelect.options.methods.onTabDown.call(this, e)\n      this.updateSelf()\n    },\n    onUpDown (e: Event) {\n      // Prevent screen from scrolling\n      e.preventDefault()\n\n      // For autocomplete / combobox, cycling\n      // interfers with native up/down behavior\n      // instead activate the menu\n      this.activateMenu()\n    },\n    selectItem (item: object) {\n      VSelect.options.methods.selectItem.call(this, item)\n      this.setSearch()\n    },\n    setSelectedItems () {\n      VSelect.options.methods.setSelectedItems.call(this)\n\n      // #4273 Don't replace if searching\n      // #4403 Don't replace if focused\n      if (!this.isFocused) this.setSearch()\n    },\n    setSearch () {\n      // Wait for nextTick so selectedItem\n      // has had time to update\n      this.$nextTick(() => {\n        if (\n          !this.multiple ||\n          !this.internalSearch ||\n          !this.isMenuActive\n        ) {\n          this.internalSearch = (\n            !this.selectedItems.length ||\n            this.multiple ||\n            this.hasSlot\n          )\n            ? null\n            : this.getText(this.selectedItem)\n        }\n      })\n    },\n    updateSelf () {\n      if (!this.searchIsDirty &&\n        !this.internalValue\n      ) return\n\n      if (!this.valueComparator(\n        this.internalSearch,\n        this.getValue(this.internalValue)\n      )) {\n        this.setSearch()\n      }\n    },\n    hasItem (item: any): boolean {\n      return this.selectedValues.indexOf(this.getValue(item)) > -1\n    },\n    onCopy (event: ClipboardEvent) {\n      if (this.selectedIndex === -1) return\n\n      const currentItem = this.selectedItems[this.selectedIndex]\n      const currentItemText = this.getText(currentItem)\n      event.clipboardData?.setData('text/plain', currentItemText)\n      event.clipboardData?.setData('text/vnd.vuetify.autocomplete.item+plain', currentItemText)\n      event.preventDefault()\n    },\n  },\n})\n"],"sourceRoot":""}